{"version":3,"sources":["components/loader/loader.tsx","routeChangeTracker.tsx","components/navbar/index.tsx","components/footer/index.tsx","app.translation/messages.ts","app.translation/language.provider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Loader","props","style","height","id","withRouter","history","listen","location","action","ReactGA","set","page","pathname","pageview","MobileNavbar","setLanguage","language","useState","showMobileNav","setShowMobileNav","hideMobileNavbar","document","body","overflow","className","color","cursor","onClick","left","activeClassName","exact","to","width","border","backgroundColor","margin","localStorage","setItem","alt","src","Nav","Footer","Date","getFullYear","messages","fr","en","de","LanguageProvider","children","locale","defaultLocale","Home","React","lazy","Project","Contact","Blog","NotFound","App","getItem","webProjects","setWebProject","mobileProjects","setMobileProject","useEffect","initialize","console","log","window","path","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3230ce74.chunk.js","sourcesContent":["export const Loader = (props: any) => (\n  <div style={{ height: props.height }} id=\"loader-container\">\n    <div></div>\n  </div>\n);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nconst RouteChangeTracker = ({ history }: any) => {\n  //@ts-ignore\n  // eslint-disable-next-line no-restricted-globals\n  history.listen((location, action) => {\n    // console.log(location);\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  });\n\n  return <div></div>;\n};\n\nexport default withRouter(RouteChangeTracker);\n","import { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst MobileNavbar = ({ setLanguage, language }: any) => {\n  const [showMobileNav, setShowMobileNav] = useState<boolean>(false);\n\n  const hideMobileNavbar = () => {\n    setShowMobileNav(false);\n    document.body.style.overflow = \"auto\";\n  };\n  return (\n    <div id=\"mobile-navbar\">\n      <i\n        className=\"fas fa-bars\"\n        style={{ color: \"white\", cursor: \"pointer\" }}\n        onClick={() => {\n          setShowMobileNav(true);\n          document.body.style.overflow = \"hidden\";\n        }}\n      />\n      <h3>Khoubaib</h3>\n      <div\n        id=\"mobile-navbar-filter\"\n        className={showMobileNav ? \"mobile-navbar-content-display\" : \"\"}\n        onClick={() => hideMobileNavbar()}\n      ></div>\n      <nav\n        id=\"mobile-navbar-nav-content\"\n        style={{ left: showMobileNav ? 0 : \"-67vw\" }}\n      >\n        <div id=\"mobile-navbar-content\">\n          <i className=\"fas fa-times\" onClick={() => hideMobileNavbar()} />\n          <ul id=\"mobile-navList\">\n            <li>\n              <NavLink\n                onClick={() => hideMobileNavbar()}\n                className=\"navlink\"\n                activeClassName=\"activNavList\"\n                exact\n                to=\"/\"\n              >\n                <FormattedMessage id=\"nav.home\" />\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                onClick={() => hideMobileNavbar()}\n                className=\"navlink\"\n                activeClassName=\"activNavList\"\n                exact\n                to=\"/projects\"\n              >\n                <FormattedMessage id=\"nav.projects\" />\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                onClick={() => hideMobileNavbar()}\n                className=\"navlink\"\n                activeClassName=\"activNavList\"\n                exact\n                to=\"/contact\"\n              >\n                <FormattedMessage id=\"nav.contact\" />\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                onClick={() => hideMobileNavbar()}\n                className=\"navlink\"\n                activeClassName=\"activNavList\"\n                exact\n                to=\"/blog\"\n              >\n                <FormattedMessage id=\"nav.blog\" />\n              </NavLink>\n            </li>\n          </ul>\n          <hr\n            style={{\n              width: \"90%\",\n              height: \"3px\",\n              border: \"none\",\n              backgroundColor: \"#26d0ce\",\n            }}\n          />\n          <span style={{ margin: \"5px auto\" }}>\n            <FormattedMessage id=\"home.languages\" />\n          </span>\n          <div id=\"mobile-navbar-language\">\n            <span\n              className={language === \"en\" ? \"dropdown-selected\" : \"\"}\n              onClick={() => {\n                localStorage.setItem(\"language\", \"en\");\n                setLanguage(\"en\");\n              }}\n            >\n              <img\n                alt=\"English\"\n                src=\"images/lang_icon/United-kingdom-icon.png\"\n              />\n            </span>\n            <span\n              className={language === \"fr\" ? \"dropdown-selected\" : \"\"}\n              onClick={() => {\n                localStorage.setItem(\"language\", \"fr\");\n                setLanguage(\"fr\");\n              }}\n            >\n              <img alt=\"France\" src=\"images/lang_icon/France-icon.png\" />\n            </span>\n\n            <span\n              className={language === \"de\" ? \"dropdown-selected\" : \"\"}\n              onClick={() => {\n                localStorage.setItem(\"language\", \"de\");\n                setLanguage(\"de\");\n              }}\n            >\n              <img alt=\"Tunisia\" src=\"images/lang_icon/Germany-icon.png\" />\n            </span>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\nconst Nav = ({ setLanguage, language }: any) => (\n  <nav id=\"nav\">\n    <div id=\"desktop-navbar\">\n      <h2 id=\"brand\">\n        <NavLink id=\"brandLink\" exact to=\"/\">\n          Khoubaib\n        </NavLink>\n      </h2>\n      <ul id=\"navList\">\n        <li>\n          <NavLink\n            className=\"navlink\"\n            activeClassName=\"activNavList\"\n            exact\n            to=\"/\"\n          >\n            <FormattedMessage id=\"nav.home\" />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"navlink\"\n            activeClassName=\"activNavList\"\n            exact\n            to=\"/projects\"\n          >\n            <FormattedMessage id=\"nav.projects\" />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"navlink\"\n            activeClassName=\"activNavList\"\n            exact\n            to=\"/contact\"\n          >\n            <FormattedMessage id=\"nav.contact\" />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className=\"navlink\"\n            activeClassName=\"activNavList\"\n            exact\n            to=\"/blog\"\n          >\n            <FormattedMessage id=\"nav.blog\" />\n          </NavLink>\n        </li>\n      </ul>\n      <div id=\"dropdown\">\n        <i className=\"fas fa-globe navlink\" />\n        <div id=\"dropdown-content\">\n          <ul\n            style={{\n              margin: 0,\n              backgroundColor: \"white\",\n              border: \"1px solid rgba(0, 0, 0, 0.12)\",\n            }}\n          >\n            <li\n              className={language === \"en\" ? \"dropdown-selected\" : \"\"}\n              onClick={() => {\n                localStorage.setItem(\"language\", \"en\");\n                setLanguage(\"en\");\n              }}\n            >\n              <img\n                alt=\"English\"\n                src=\"images/lang_icon/United-kingdom-icon.png\"\n              />\n            </li>\n            <li\n              className={language === \"fr\" ? \"dropdown-selected\" : \"\"}\n              onClick={() => {\n                localStorage.setItem(\"language\", \"fr\");\n                setLanguage(\"fr\");\n              }}\n            >\n              <img alt=\"France\" src=\"images/lang_icon/France-icon.png\" />\n            </li>\n\n            <li\n              className={language === \"de\" ? \"dropdown-selected\" : \"\"}\n              onClick={() => {\n                localStorage.setItem(\"language\", \"de\");\n                setLanguage(\"de\");\n              }}\n            >\n              <img alt=\"Tunisia\" src=\"images/lang_icon/Germany-icon.png\" />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <MobileNavbar setLanguage={setLanguage} language={language} />\n  </nav>\n);\n\nexport default Nav;\n","//import { NavLink } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst Footer = () => (\n  <footer>\n    <FormattedMessage id=\"footer.copyright\" /> &copy; {new Date().getFullYear()}\n    &nbsp;\n    {/*<a href=\"http://Khoubaib-ab.me\" target=\"_blank\" rel=\"noopener noreferrer\">\n      khoubaib-ab.me\n    </a>*/}\n    <span style={{ color: \"blueviolet\" }}>Abdellaoui Khoubaib</span>\n    &nbsp;\n    <FormattedMessage id=\"footer.allRight\" />\n  </footer>\n);\nexport default Footer;\n","import localFr from \"./lang/fr.json\";\nimport localEn from \"./lang/en.json\";\nimport localDe from \"./lang/de.json\";\n\nexport const messages: any = {\n  fr: localFr,\n  en: localEn,\n  de: localDe,\n};\n","import { messages } from \"./messages\";\nimport { IntlProvider } from \"react-intl\";\ntype LanguageProviderPropType = {\n  children?: any;\n  language?: any;\n};\n\nconst LanguageProvider = ({ children, language }: LanguageProviderPropType) => {\n  return (\n    <IntlProvider\n      locale={language}\n      defaultLocale={language}\n      messages={messages[language]}\n    >\n      {children}\n    </IntlProvider>\n  );\n};\nexport default LanguageProvider;\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport RouteChangeTracker from \"./routeChangeTracker\";\nimport Nav from \"./components/navbar/index\";\nimport Footer from \"./components/footer/index\";\nimport LanguageProvider from \"./app.translation/language.provider\";\nimport { Loader } from \"./components/loader/loader\";\nimport { projectType } from \"./@types/types\";\nimport \"./App.css\";\nconst Home = React.lazy(() => import(\"./pages/home/index\"));\nconst Project = React.lazy(() => import(\"./pages/project/index\"));\nconst Contact = React.lazy(() => import(\"./pages/contact/index\"));\nconst Blog = React.lazy(() => import(\"./pages/blog/index\"));\nconst NotFound = React.lazy(() => import(\"./pages/notFound/index\"));\n\nfunction App() {\n  const [language, setLanguage] = useState<string>(\n    localStorage.getItem(\"language\") ||\n      \"en\" /*navigator.language.split(\"-\")[0]*/\n  );\n  const [webProjects, setWebProject] = useState<[projectType] | [] | null>(\n    null\n  );\n  const [mobileProjects, setMobileProject] = useState<\n    [projectType] | [] | null\n  >(null);\n\n  useEffect(() => {\n    const TRACKING_ID = \"G-6SZL8E2P4T\";\n    ReactGA.initialize(TRACKING_ID);\n    console.log(window.location.pathname);\n  }, []);\n\n  return (\n    <LanguageProvider language={language}>\n      <div className=\"App\">\n        <Router>\n          <RouteChangeTracker />\n          <Nav setLanguage={setLanguage} language={language} />\n          <Switch>\n            <Route exact path=\"/\">\n              <Suspense fallback={<Loader />}>\n                <Home />\n              </Suspense>\n            </Route>\n            <Route exact path=\"/projects\">\n              <Suspense fallback={<Loader />}>\n                <Project\n                  webProjects={webProjects}\n                  mobileProjects={mobileProjects}\n                  setWebProject={setWebProject}\n                  setMobileProject={setMobileProject}\n                />\n              </Suspense>\n            </Route>\n            <Route exact path=\"/contact\">\n              <Suspense fallback={<Loader />}>\n                <Contact language={language} />\n              </Suspense>\n            </Route>\n            <Route exact path=\"/blog\">\n              <Suspense fallback={<Loader />}>\n                <Blog />\n              </Suspense>\n            </Route>\n            <Route exact>\n              <Suspense fallback={<Loader />}>\n                <NotFound />\n              </Suspense>\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </div>\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport LanguageProvider from \"./app.translation/language.provider\";\nReactDOM.render(\n  <React.StrictMode>\n    <LanguageProvider>\n      <App />\n    </LanguageProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}